class Solution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        sort(potions.begin(), potions.end());
        int n = spells.size(), m = potions.size();
        vector<int> res(n);
        
        for (int i = 0; i < n; i++) {
            long long spell = spells[i];
            // int j = 0;
            // while (j < m && spell * (long long)potions[j] < success) j++;
            // iski jagah bs laga lenge
            if(spell*potions[m-1]<success){res[i]=0;continue;}
            long long need = (success + spell - 1) / spell;
            int j=lower_bound(potions.begin(),potions.end(),need)-potions.begin();
            res[i] = m - j;
        }
        return res;
    }
};
