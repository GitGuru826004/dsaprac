class Solution {
public:
    int findJudge(int n, vector<vector<int>>& trust) {
        vector<vector<int>>adj(n+1);
        vector<int>trustedby(n+1,0);
        for(auto &edge:trust){
            int u= edge[0];
            int v=edge[1];
            adj[u].push_back(v);
            trustedby[v]++;
        }
        for(int i=1;i<=n;i++){
            if(adj[i].empty() && trustedby[i]==n-1){
                return i;
            }
        }
        return -1; 
    }
};



class Solution {
public:
    int findJudge(int n, vector<vector<int>>& trust) {
        vector<int>trustedby(n+1,0);
        for(auto &edge:trust){
            int u= edge[0];
            int v=edge[1];
            trustedby[u]--;
            trustedby[v]++;
        }
        for(int i=1;i<=n;i++){
            if(trustedby[i]==n-1){
                return i;
            }
        }
        return -1; 
    }
};
